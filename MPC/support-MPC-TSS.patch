From 0e0b13cd3b5bc0632efeb98cd352bf295f5a8711 Mon Sep 17 00:00:00 2001
From: 18523959662 <luoshenghang@huawei.com>
Date: Thu, 29 Aug 2024 07:10:10 +0000
Subject: [PATCH] support MPC TSS

---
 libspu/core/encoding.cc   |  2 +-
 libspu/mpc/BUILD.bazel    |  7 +++++++
 libspu/mpc/factory.cc     |  8 ++++++++
 libspu/mpc/tss/io.h       | 20 ++++++++++++++++++++
 libspu/mpc/tss/protocol.h | 18 ++++++++++++++++++
 libspu/spu.proto          |  3 +++
 6 files changed, 57 insertions(+), 1 deletion(-)
 create mode 100644 libspu/mpc/tss/io.h
 create mode 100644 libspu/mpc/tss/protocol.h

diff --git a/libspu/core/encoding.cc b/libspu/core/encoding.cc
index eb26ce9..b136d8e 100644
--- a/libspu/core/encoding.cc
+++ b/libspu/core/encoding.cc
@@ -68,7 +68,7 @@ NdArrayRef encodeToRing(const PtBufferView& bv, FieldType field,
         // Reference: https://eprint.iacr.org/2019/599.pdf
         // To make `msb based comparison` work, the safe range is
         // [-2^(k-2), 2^(k-2))
-        const size_t k = sizeof(T) * 8;
+        const size_t k = 32;
         const T kScale = T(1) << fxp_bits;
         const T kFxpLower = -(T)std::pow(2, k - 2);
         const T kFxpUpper = (T)std::pow(2, k - 2) - 1;
diff --git a/libspu/mpc/BUILD.bazel b/libspu/mpc/BUILD.bazel
index ffced4c..2137608 100644
--- a/libspu/mpc/BUILD.bazel
+++ b/libspu/mpc/BUILD.bazel
@@ -40,6 +40,12 @@ spu_cc_library(
     alwayslink = True,
 )
 
+cc_import(
+    name = "tss",
+    hdrs = ["tss/io.h", "tss/protocol.h"],
+    static_library = "tss/libtss.a",
+)
+
 spu_cc_library(
     name = "factory",
     srcs = ["factory.cc"],
@@ -51,6 +57,7 @@ spu_cc_library(
         "//libspu/mpc/ref2k",
         "//libspu/mpc/securenn",
         "//libspu/mpc/semi2k",
+        ":tss",
     ],
 )
 
diff --git a/libspu/mpc/factory.cc b/libspu/mpc/factory.cc
index 5ee0c69..b5baff4 100644
--- a/libspu/mpc/factory.cc
+++ b/libspu/mpc/factory.cc
@@ -26,6 +26,8 @@
 #include "libspu/mpc/securenn/protocol.h"
 #include "libspu/mpc/semi2k/io.h"
 #include "libspu/mpc/semi2k/protocol.h"
+#include "libspu/mpc/tss/io.h"
+#include "libspu/mpc/tss/protocol.h"
 
 namespace spu::mpc {
 
@@ -39,6 +41,9 @@ void Factory::RegisterProtocol(
     case ProtocolKind::SEMI2K: {
       return regSemi2kProtocol(ctx, lctx);
     }
+    case ProtocolKind::TSS: {
+      return regTssProtocol(ctx, lctx);
+    }
     case ProtocolKind::ABY3: {
       return regAby3Protocol(ctx, lctx);
     }
@@ -63,6 +68,9 @@ std::unique_ptr<IoInterface> Factory::CreateIO(const RuntimeConfig& conf,
     case ProtocolKind::SEMI2K: {
       return semi2k::makeSemi2kIo(conf.field(), npc);
     }
+    case ProtocolKind::TSS: {
+      return tss::makeTssIo(conf.field(), npc);
+    }
     case ProtocolKind::ABY3: {
       return aby3::makeAby3Io(conf.field(), npc);
     }
diff --git a/libspu/mpc/tss/io.h b/libspu/mpc/tss/io.h
new file mode 100644
index 0000000..6aad2e8
--- /dev/null
+++ b/libspu/mpc/tss/io.h
@@ -0,0 +1,20 @@
+/*
+ * Copyright (c) Huawei Technologies Co., Ltd. 2023-2024. All rights reserved.
+ */
+
+#ifndef TSS_IO_H
+#define TSS_IO_H
+
+#include "libspu/mpc/semi2k/io.h"
+
+namespace spu::mpc::tss {
+class TssIo final : public semi2k::Semi2kIo {
+public:
+    TssIo(FieldType field, size_t npc);
+    std::vector<NdArrayRef> toShares(const NdArrayRef &raw, Visibility vis, int owner_rank) const override;
+};
+
+std::unique_ptr<TssIo> makeTssIo(FieldType field, size_t npc);
+}
+
+#endif
\ No newline at end of file
diff --git a/libspu/mpc/tss/protocol.h b/libspu/mpc/tss/protocol.h
new file mode 100644
index 0000000..906891d
--- /dev/null
+++ b/libspu/mpc/tss/protocol.h
@@ -0,0 +1,18 @@
+/*
+ * Copyright (c) Huawei Technologies Co., Ltd. 2023-2024. All rights reserved.
+ */
+
+#ifndef TSS_PROTOCOL_H
+#define TSS_PROTOCOL_H
+
+#include "yacl/link/link.h"
+#include "libspu/core/context.h"
+
+namespace spu::mpc {
+void regTssProtocol(SPUContext *ctx, const std::shared_ptr<yacl::link::Context> &lctx);
+
+std::unique_ptr<SPUContext> makeTssProtocol(const RuntimeConfig &conf,
+    const std::shared_ptr<yacl::link::Context> &lctx);
+}
+
+#endif
\ No newline at end of file
diff --git a/libspu/spu.proto b/libspu/spu.proto
index 93793d8..c06e09d 100644
--- a/libspu/spu.proto
+++ b/libspu/spu.proto
@@ -126,6 +126,9 @@ enum ProtocolKind {
   // A semi-honest 3PC-protocol for Neural Network, P2 as the helper,
   // (https://eprint.iacr.org/2018/442)
   SECURENN = 5;
+
+  // Huawei TSS protocol
+  TSS = 6;
 }
 
 message ValueMetaProto {
-- 
2.43.0

